(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
global.WebRTCInterop = require('./index.js')

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./index.js":2}],2:[function(require,module,exports){
module.exports = require('./webrtc-interop.js')

},{"./webrtc-interop.js":3}],3:[function(require,module,exports){
(function (global){
// Generated by CoffeeScript 1.7.1
(function() {
  var WebRTCInterop;

  WebRTCInterop = (function() {
    function WebRTCInterop() {}

    WebRTCInterop.infectGlobal = function() {
      var _ref, _ref1, _ref2, _ref3;
      global.RTCPeerConnection = (_ref = (_ref1 = global.RTCPeerConnection) != null ? _ref1 : global.webkitRTCPeerConnection) != null ? _ref : global.mozRTCPeerConnection;
      global.RTCSessionDescription = (_ref2 = global.RTCSessionDescription) != null ? _ref2 : global.mozRTCSessionDescription;
      return global.RTCIceCandidate = (_ref3 = global.RTCIceCandidate) != null ? _ref3 : global.mozRTCIceCandidate;
    };

    return WebRTCInterop;

  })();

  module.exports = WebRTCInterop;

}).call(this);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[1]);
